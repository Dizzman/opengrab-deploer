version: '3.7'
networks:
  opengrab-net:
    driver: bridge

services:
 zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
     - "2181:2181"
    networks:
     - opengrab-net

 kafka:
    image: wurstmeister/kafka
    ports:
     - "9092:9092"
    expose:
     - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "topic_test:1:1"   
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10    
    networks:
     - opengrab-net

 minio:
   image: minio/minio:latest
   command: server --console-address ":9001" /data/
   restart: always
   container_name: og-minio
   ports:
     - "9000:9000"
     - "9001:9001"
   environment:
     MINIO_ROOT_USER: opengrab
     MINIO_ROOT_PASSWORD: minio123
   volumes:
     - minio-storage:/data
   healthcheck:
     test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
     interval: 30s
     timeout: 20s
     retries: 3
   depends_on:
     kafka:
      condition: service_started
   networks:
    - opengrab-net

 tvxml-downloader:
    image: my_images/opengrab-tvxml-downloader:latest
    container_name: og-tvxml-downloader
    restart: always
    build:
      context: opengrab-tvxml-downloader
      dockerfile: docker/Dockerfile

    env_file: ./opengrab-tvxml-downloader/config/local.env
    environment:      
         STORAGE_MINIO_URL: minio
         BACKEND_URL: http://srv_rest_api
         BACKEND_PORT: 8081
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    depends_on:
       minio:
          condition: service_healthy
       srv_rest_api:
          condition: service_started
       kafka:
         condition: service_healthy

    networks:
      - opengrab-net

 srv_rest_api:
    image: my_images/opengrab-api-server:latest
    container_name: og-api-server
    restart: always
    build:
      context: opengrab-api-server
      dockerfile: docker/Dockerfile

    env_file: ./opengrab-api-server/config/local.env
    environment:
      POSTGRES_ADR: host.docker.internal
      STORAGE_MINIO_URL: minio
      BACKEND_PORT: 8081
      BACKEND_URL: 0.0.0.0
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
#      interval: 30s
#      timeout: 24h
#      retries: 3

    depends_on:
       minio:
          condition: service_healthy


    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - opengrab-net
    ports:
      - "8081:8081"
 srv_admin_telegram_bot:
   image: my_images/opengrab-admin-telegram-bot:latest
   container_name: og-telegram_admin
   restart: always
   build:
     context: opengrab-admin-telegram-bot
     dockerfile: docker/Dockerfile


   env_file: ./opengrab-admin-telegram-bot/config/local.env
   depends_on:
     minio:
       condition: service_healthy
     srv_rest_api:
       condition: service_started
     kafka:
       condition: service_healthy
   networks:
     - opengrab-net
volumes:
 minio-storage:
